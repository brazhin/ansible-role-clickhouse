---
# Port for HTTP API. See also 'https_port' for secure connections.
# This interface is also used by ODBC and JDBC drivers (DataGrip, Dbeaver, ...)
# and by most of web interfaces (embedded UI, Grafana, Redash, ...).
http_port: 8123

# Port for interaction by native protocol with:
# - clickhouse-client and other native ClickHouse tools (clickhouse-benchmark, clickhouse-copier);
# - clickhouse-server with other clickhouse-servers for distributed query processing;
# - ClickHouse drivers and applications supporting native protocol
# (this protocol is also informally called as "the TCP protocol");
# See also 'tcp_port_secure' for secure connections.
tcp_port: 9000

# Compatibility with MySQL protocol.
# ClickHouse will pretend to be MySQL for applications connecting to this port.
# mysql_port: 9004

# Compatibility with PostgreSQL protocol.
# ClickHouse will pretend to be PostgreSQL for applications connecting to this port.
# postgresql_port: 9005

# HTTP API with TLS (HTTPS).
# You have to configure certificate to enable this interface.
# See the openSSL section below.
# https_port: 8443

# Native interface with TLS.
# You have to configure certificate to enable this interface.
# See the openSSL section below.
# tcp_port_secure: 9440

# Native interface wrapped with PROXYv1 protocol
# PROXYv1 header sent for every connection.
# ClickHouse will extract information about proxy-forwarded client address from the header.
# tcp_with_proxy_port: 9011

# Port for communication between replicas. Used for data exchange.
# It provides low-level data access between servers.
# This port should not be accessible from untrusted networks.
# See also 'interserver_http_credentials'.
# Data transferred over connections to this port should not go through untrusted networks.
# See also 'interserver_https_port'.
interserver_http_port: 9009

# Port for communication between replicas with TLS.
# You have to configure certificate to enable this interface.
# See the openSSL section below.
# See also 'interserver_http_credentials'.
# interserver_https_port: 9010

# Listen specified address.
# Use :: (wildcard IPv6 address), if you want to accept connections both with IPv4 and IPv6 from everywhere.
# Notes:
# If you open connections from wildcard address, make sure that at least one of the following measures applied:
# - server is protected by firewall and not accessible from untrusted networks;
# - all users are restricted to subset of network addresses (see users.xml);
# - all users have strong passwords, only secure (TLS) interfaces are accessible, or connections are only made via TLS interfaces.
# - users without password have readonly access.
# See also: https://www.shodan.io/search?query=clickhouse
# Default values - try listen localhost on IPv4 and IPv6.
listen_host: '::'

# Don't exit if IPv6 or IPv4 networks are unavailable while trying to listen.
# listen_try: 0

# Allow multiple servers to listen on the same address:port. This is not recommended.
# listen_reuse_port: 0

# gRPC protocol (see src/Server/grpc_protos/clickhouse_grpc.proto for the API)
# grpc_port: 9100
# grpc:
#     enable_ssl: false
#
#     # The following two files are used only if enable_ssl=1
#     ssl_cert_file: /path/to/ssl_cert_file
#     ssl_key_file: /path/to/ssl_key_file
#
#     # Whether server will request client for a certificate
#     ssl_require_client_auth: false
#
#     # The following file is used only if ssl_require_client_auth=1
#     ssl_ca_cert_file: /path/to/ssl_ca_cert_file
#
#     # Default compression algorithm (applied if client doesn't specify another algorithm).
#     # Supported algorithms: none, deflate, gzip, stream_gzip
#     compression: deflate
#
#     # Default compression level (applied if client doesn't specify another level).
#     # Supported levels: none, low, medium, high
#     compression_level: medium
#
#     # Send/receive message size limits in bytes. -1 means unlimited
#     max_send_message_size: -1
#     max_receive_message_size: -1
#
#     # Enable if you want very detailed logs
#     verbose_logs: false

# Used with https_port and tcp_port_secure. Full ssl options list: https://github.com/ClickHouse-Extras/poco/blob/master/NetSSL_OpenSSL/include/Poco/Net/SSLManager.h#L71
# openSSL:
#     server:
#         # Used for https server AND secure tcp port
#         # openssl req -subj "/CN=localhost" -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout /etc/clickhouse-server/server.key -out /etc/clickhouse-server/server.crt
#         # certificateFile: /etc/clickhouse-server/server.crt
#         # privateKeyFile: /etc/clickhouse-server/server.key
#
#         # dhparams are optional. You can delete the dhParamsFile: element.
#         # To generate dhparams, use the following command:
#         # openssl dhparam -out /etc/clickhouse-server/dhparam.pem 4096
#         # Only file format with BEGIN DH PARAMETERS is supported.
#         dhParamsFile: /etc/clickhouse-server/dhparam.pem
#         verificationMode: none
#         loadDefaultCAFile: true
#         cacheSessions: true
#         disableProtocols: 'sslv2,sslv3'
#         preferServerCiphers: true
#     client:
#         # Used for connecting to https dictionary source and secured Zookeeper communication
#         loadDefaultCAFile: true
#         cacheSessions: true
#         disableProtocols: 'sslv2,sslv3'
#         preferServerCiphers: true
#
#         # Use for self-signed: verificationMode: none
#         invalidCertificateHandler:
#             # Use for self-signed: name: AcceptCertificateHandler
#             name: RejectCertificateHandler
